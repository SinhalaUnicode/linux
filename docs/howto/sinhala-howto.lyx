#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass docbook
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize a4paper
\use_geometry false
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Title
Enabling Sinhala in GNU/Linux HOWTO
\end_layout

\begin_layout Author
Harshula Jayasuriya <harshula at gmail dot com>
\end_layout

\begin_layout Author
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Section
About This Guide
\end_layout

\begin_layout Standard
Sinhala is the main language of Sri Lanka.
 This guide describes the level of Sinhala support available in GNU/Linux.
 It also describes how to enable Sinhala support and the tasks that still
 require attention.
\end_layout

\begin_layout Standard
This guide is GNOME and Debian/Ubuntu centric.
 Most of the explanations and suggestions should also be applicable to other
 distributions.
\end_layout

\begin_layout Subsection
Revisions
\end_layout

\begin_layout Itemize
v0.1 - 2004/06/05
\end_layout

\begin_layout Itemize
v0.2 - 2004/10/07
\end_layout

\begin_layout Itemize
v0.3 - 2005/03/06
\end_layout

\begin_layout Itemize
v0.4 - 2006/04/03 
\end_layout

\begin_layout Itemize
v0.5 - 2006/11/20 - in progress
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The level of Sinhala support in GNU/Linux distributions has improved quite
 significantly as patches have been committed upstream.
\end_layout

\begin_layout Standard
Debian 4.0 (Etch/testing) and Ubuntu 6.10 (Edgy) ship with SLS1134 support
 in Pango, the GNOME renderer.
 They also ship with a phonetic Sinhala keyboard layout in Xorg and a basic,
 incomplete, Unicode Sinhala font.
 Open Office's renderer, ICU, has SLS1134 support in Debian 4.0 (Etch/testing)
 but Ubuntu 6.10 ships with ICU 3.4 and does not have SLS1134 support.
\end_layout

\begin_layout Standard
As Sinhala support in GNU/Linux distributions improve, this HOWTO will only
 be of historical value.
 However, for the time being, use this document to check the current status
 of Sinhala support in GNU/Linux and how to enable better support.
\end_layout

\begin_layout Standard
Many individuals have contributed to the project.
 Some of the notable contributors are:
\end_layout

\begin_layout Itemize
Dushara Jayasinghe
\end_layout

\begin_layout Itemize
Harshula Jayasuriya
\end_layout

\begin_layout Itemize
Chamath Keppitiyagama
\end_layout

\begin_layout Itemize
Anuradha Ratnaweera
\end_layout

\begin_layout Itemize
Harsha Senanayake
\end_layout

\begin_layout Itemize
Naoto Takahashi 
\end_layout

\begin_layout Subsection
Learning about Sinhala
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://en.wikipedia.org/wiki/Sinhala]{http://en.wikipedia.org/wiki/Sinhala}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.speaksinhala.com]{http://www.speaksinhala.com}

\end_inset


\end_layout

\begin_layout Itemize
Silva, A.W.L.
 (2003).
 
\emph on
SINHALESE for Beginners
\emph default
.
 Sri Lanka: Pubudu Printers Kandana
\end_layout

\begin_deeper
\begin_layout Itemize
The first chapter has excellent coverage of the Sinhala letters.
\end_layout

\end_deeper
\begin_layout Subsection
Learning about Unicode
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.unicode.org]{http://www.unicode.org}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[UTF-8 and Unicode FAQ for Unix/Linux]{http://www.cl.cam.ac.uk/~mgk25/unicode.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Unicode Technical Standard #10:]{http://unicode.org/reports/tr10/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Unicode Collation Charts]{http://unicode.org/charts/collation/}

\end_inset


\end_layout

\begin_layout Subsection
Standards
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[ISO 639-2: Codes for the Representation of Names of Languages]{http://www.loc.gov/standards/iso639-2/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[ISO 3166: English country names and code elements]{http://www.iso.org/iso/en/prods-services/iso3166ma/index.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[ISO 15924: Codes for the representation of names of scripts]{http://www.unicode.org/iso15924/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Unicode Sinhala codepoints]{http://www.unicode.org/charts/PDF/U0D80.pdf}

\end_inset


\end_layout

\begin_layout Itemize
SLS1134 (not available online)
\end_layout

\begin_layout Itemize
Sinhala Character Code for Information Interchange - Part 1: Collation Sequence
 (not available online)
\end_layout

\begin_layout Subsection
Mailing Lists
\end_layout

\begin_layout Standard
The Sinhala GNU/Linux users and developers use these mailing lists for announcem
ents, discussions, debugging and reviews.
\end_layout

\begin_layout Standard
Therefore, the archives of the mailing lists contain very useful information
 for both new users and new developers.
\end_layout

\begin_layout Standard
Please search the archives for the answers to your questions before posting
 to the mailing lists.
\end_layout

\begin_layout Subsubsection
Sinhala CVS Commits List (in English for developers)
\end_layout

\begin_layout Itemize
Archive: 
\begin_inset LatexCommand \htmlurl[http://sourceforge.net/mailarchive/forum.php?forum=sinhala-cvs-commits]{http://sourceforge.net/mailarchive/forum.php?forum=sinhala-cvs-commits}

\end_inset


\end_layout

\begin_layout Itemize
Subscribe: 
\begin_inset LatexCommand \htmlurl[https://lists.sourceforge.net/lists/listinfo/sinhala-cvs-commits]{https://lists.sourceforge.net/lists/listinfo/sinhala-cvs-commits}

\end_inset


\end_layout

\begin_layout Subsubsection
Sinhala Technical List (in English for developers)
\end_layout

\begin_layout Itemize
Archive: 
\begin_inset LatexCommand \htmlurl[http://sourceforge.net/mailarchive/forum.php?forum=sinhala-technical]{http://sourceforge.net/mailarchive/forum.php?forum=sinhala-technical}

\end_inset


\end_layout

\begin_layout Itemize
Subscribe: 
\begin_inset LatexCommand \htmlurl[https://lists.sourceforge.net/lists/listinfo/sinhala-technical]{https://lists.sourceforge.net/lists/listinfo/sinhala-technical}

\end_inset


\end_layout

\begin_layout Subsubsection
Sinhala Linux List (in English for users)
\end_layout

\begin_layout Itemize
Archive: 
\begin_inset LatexCommand \htmlurl[http://www.lug.lk/lurker/list/sinhala.en.html]{http://www.lug.lk/lurker/list/sinhala.en.html}

\end_inset


\end_layout

\begin_layout Itemize
Subscribe: 
\begin_inset LatexCommand \htmlurl[https://secure.lug.lk/mailman/listinfo/sinhala]{https://secure.lug.lk/mailman/listinfo/sinhala}

\end_inset


\end_layout

\begin_layout Subsubsection
Sinhala Unicode List (in Sinhala for developers and users)
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://groups.google.com/group/sinhala-unicode]{http://groups.google.com/group/sinhala-unicode}

\end_inset


\end_layout

\begin_layout Section
Enabling Sinhala
\end_layout

\begin_layout Subsection
Debian and Ubuntu Sinhala repositories
\end_layout

\begin_layout Subsubsection
What is available?
\end_layout

\begin_layout Itemize
LKLUG Unicode Sinhala font
\end_layout

\begin_layout Itemize
libicu (renderer used by Open Office) with Sinhala support
\end_layout

\begin_layout Itemize
SCIM transliterated input method
\end_layout

\begin_deeper
\begin_layout Itemize
Automatically set the required environment variables in /etc/environment
\end_layout

\end_deeper
\begin_layout Subsubsection
How to install
\end_layout

\begin_layout Enumerate
On Debian Etch (testing) add to /etc/apt/sources.list
\end_layout

\begin_deeper
\begin_layout Code
deb http://sinhala.sourceforge.net/debian/i386/etch/ ./
\end_layout

\begin_layout Standard
On Ubuntu Edgy (6.10) add to /etc/apt/sources.list
\end_layout

\begin_layout Code
deb http://sinhala.sourceforge.net/ubuntu/i386/edgy/ ./
\end_layout

\end_deeper
\begin_layout Enumerate
Update repository metadata:
\end_layout

\begin_deeper
\begin_layout Code
apt-get update
\end_layout

\end_deeper
\begin_layout Enumerate
Install Sinhala packages:
\end_layout

\begin_deeper
\begin_layout Code
apt-get install sinhala-gnu-linux
\end_layout

\end_deeper
\begin_layout Enumerate
Upgrade libicu package:
\end_layout

\begin_deeper
\begin_layout Code
apt-get upgrade
\end_layout

\end_deeper
\begin_layout Enumerate
Logout and login again.
 Environment variables need to be set/updated (NO NEED TO REBOOT)
\end_layout

\begin_layout Subsubsection
How to test
\end_layout

\begin_layout Enumerate
Visit http://si.wikipedia.org/ and see if the Sinhala letters render correctly.
\end_layout

\begin_layout Enumerate
Copy and paste some of the content from Sinhala wikipedia to Open Office
 Writer.
 Then highlight the Sinhala text and choose the LKLUG font to display them.
\end_layout

\begin_layout Enumerate
To test SCIM, press Control-space whilst you are running a GNOME application.
 Then select one of the Sinhala input methods.
\end_layout

\begin_layout Subsection
Fonts
\end_layout

\begin_layout Standard
Download a Unicode Sinhala font:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://sinhala.sourceforge.net/files/lklug.ttf]{http://sinhala.sourceforge.net/files/lklug.ttf}

\end_inset


\end_layout

\begin_layout Standard
If you are using a modern GNU/Linux version and it has fontconfig installed,
 all you have to do is make a .fonts directory in your home directory:
\end_layout

\begin_layout Code
mkdir ~/.fonts
\end_layout

\begin_layout Standard
and copy the True/Open Type font into that directory.
\end_layout

\begin_layout Standard
If you want to make the font available to all users of the system, become
 root and copy the font to:
\end_layout

\begin_layout Code
/usr/share/fonts
\end_layout

\begin_layout Standard
In both the above cases, run:
\end_layout

\begin_layout Code
fc-cache -fv
\end_layout

\begin_layout Standard
To check which font file provides the Sinhala support, run:
\end_layout

\begin_layout Code
fc-list :lang=si file
\end_layout

\begin_layout Standard
Immediately you'll be able to read Unicode Sinhala in these programs:
\end_layout

\begin_layout Itemize
Anything gtk2 based
\end_layout

\begin_deeper
\begin_layout Itemize
evolution
\end_layout

\begin_layout Itemize
gedit
\end_layout

\begin_layout Itemize
gucharmap
\end_layout

\begin_layout Itemize
Firefox/Mozilla (built with gtk2, FreeType2 and Pango support)
\end_layout

\end_deeper
\begin_layout Standard
If you have Pango 1.8.2 and greater, you will have full SLS1134 Sinhala support.
\end_layout

\begin_layout Subsection
Firefox/Mozilla
\end_layout

\begin_layout Subsubsection
Debian 4.0 (Etch)
\end_layout

\begin_layout Standard
Pango is enabled by default in Debian 4.0.
\end_layout

\begin_layout Subsubsection
Ubuntu 5.10
\end_layout

\begin_layout Standard
Pango is enabled by default in Ubuntu 5.10.
\end_layout

\begin_layout Subsubsection
Ubuntu 6.06
\end_layout

\begin_layout Standard
Ubuntu 6.06 users can enable Pango in Firefox by setting an environment variable:
\end_layout

\begin_layout Code
MOZ_DISABLE_PANGO=0
\end_layout

\begin_layout Subsubsection
Ubuntu 6.10
\end_layout

\begin_layout Standard
Ubuntu 6.10 users can enable Pango in Firefox by setting an environment variable:
\end_layout

\begin_layout Code
MOZ_DISABLE_PANGO=0
\end_layout

\begin_layout Standard
Or by simply installing the Ubuntu package:
\end_layout

\begin_layout Code
language-pack-si-base
\end_layout

\begin_layout Subsubsection
Fedora Core 3
\end_layout

\begin_layout Quotation
Firefox and Mozilla can be enabled with pango rendering support, which enables
 many text layout features, including the rendering of CTL (Complex Text
 Layout) such as Indic languages.
 To enable this, set the following environment variable when running Firefox
 or Mozilla:
\end_layout

\begin_layout Quotation
MOZ_ENABLE_PANGO=1 
\begin_inset Foot
status open

\begin_layout Standard
http://download.fedora.redhat.com/pub/fedora/linux/core/3/i386/os/RELEASE-NOTES-en.h
tml
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Fedora Core 4 & Above
\end_layout

\begin_layout Standard
Pango is enabled by default so you don't have to do anything extra:
\end_layout

\begin_layout Quotation
7.2.
 Pango Text Renderer for Firefox
\end_layout

\begin_layout Quotation
Fedora is building Firefox with the Pango system as the text renderer.
 This provides better support for certain language scripts, such as Indic
 and some CJK scripts.
 Pango is included with with permission of the Mozilla Corporation.
 This change is known to break rendering of MathML, and may negatively impact
 performance on some pages.
 To disable the use of Pango, set your environment before launching Firefox:
\end_layout

\begin_layout Quotation
MOZ_DISABLE_PANGO=1 /usr/bin/firefox 
\end_layout

\begin_layout Quotation
...
\end_layout

\begin_layout Quotation
23.4.
 Pango Support in Firefox
\end_layout

\begin_layout Quotation
Firefox in Fedora Core is built with Pango, which provides better support
 for certain scripts, such as Indic and some CJK scripts.
 Fedora has the permission of the Mozilla Corporation to use the Pango system
 for text renderering.
\end_layout

\begin_layout Quotation
To disable the use of Pango, set MOZ_DISABLE_PANGO=1 in your environment
 before launching Firefox.
 
\begin_inset Foot
status open

\begin_layout Standard
http://fedora.redhat.com/docs/release-notes/fc5/
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Open Office
\end_layout

\begin_layout Subsubsection
Debian 4.0 (Etch)
\end_layout

\begin_layout Standard
Debian 4.0 ships with ICU 3.6 which contains Sinhala support.
 However, Open Office has not been patched to not filter out ZWJ.
 Also, there is a bug in ICU that can trigger Open Office to crash when
 typing in Sinhala.
\end_layout

\begin_layout Subsubsection
Ubuntu 6.10
\end_layout

\begin_layout Standard
Ubuntu 6.10 ships with ICU 3.4 which does not contain Sinhala support.
\end_layout

\begin_layout Subsubsection
Fedora Core 5
\end_layout

\begin_layout Standard
Fedora Core 5 ships with ICU 3.4 which does not contain Sinhala support.
\end_layout

\begin_layout Subsubsection
Fedora Core 6
\end_layout

\begin_layout Standard
Fedora Core 6 ships with ICU 3.6 which contains Sinhala support.
 Furthermore, Open Office has been patched to not filter out ZWJ.
 However, there is a bug in ICU that can trigger Open Office to crash when
 typing in Sinhala.
\end_layout

\begin_layout Subsubsection
Open Office 2.1
\end_layout

\begin_layout Standard
Open Office 2.1 should support Sinhala on all distros.
\end_layout

\begin_layout Subsection
Input Methods
\end_layout

\begin_layout Standard

\series medium
To test multi-lingual input methods in gtk2 based programs, run:
\end_layout

\begin_layout Code
gedit
\end_layout

\begin_layout Standard

\series medium
To check which input methods are available for gtk2 based programs, run:
 
\end_layout

\begin_layout Code
/usr/bin/gtk-query-immodules-2.0
\end_layout

\begin_layout Standard

\series medium
which comes with gtk2.
\end_layout

\begin_layout Subsubsection
Keyboard Layouts: X Keyboard Extension
\end_layout

\begin_layout Standard
You should have at least XFree86 4.3 or Xorg 6.7.
 To familiarise yourself with this keyboard layout, read:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html}

\end_inset


\end_layout

\begin_layout Standard
The X Keyboard Extension only allows one-to-one mappings between keys and
 codepoints, therefore rakaaranshaya, yansaya and repaya, which consist
 of multiple codepoints, have to be manually constructed.
 See the comments in the Sinhala X Keyboard Extension layout file.
\end_layout

\begin_layout Paragraph
Xorg 6.9+
\end_layout

\begin_layout Standard
The aforementioned layout is already included in Xorg 6.9 and above and distribut
ions that ship with xkeyboard-config 0.6 and above.
\end_layout

\begin_layout Standard
Debian Etch:
\end_layout

\begin_layout Code
/usr/share/X11/xkb/symbols/lk
\end_layout

\begin_layout Standard
Ubuntu 5.10:
\end_layout

\begin_layout Code
/etc/X11/xkb/symbols/lk
\end_layout

\begin_layout Standard
Fedora Core 5:
\end_layout

\begin_layout Code
/usr/share/X11/xkb/symbols/lk
\end_layout

\begin_layout Standard
The latest version of the keyboard layout can be downloaded from CVS:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[lk]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/keymaps/lk?root=sinhala}

\end_inset


\end_layout

\begin_layout Standard
Read the comments in the lk file to see how to create rakaaranshaya, yansaya
 and repaya.
\end_layout

\begin_layout Standard
The window manager should come with a program which allows the user to choose
 multiple keyboard layouts.
\end_layout

\begin_layout Standard
In the example below I have chosen the SHIFT keys to switch between the
 Sinhala phonetic layout and the US QWERTY layout.
 Hold one of the SHIFT keys down and then press the other SHIFT key, this
 should toggle between the layouts.
\end_layout

\begin_layout Standard
Using the GUI in GNOME:
\end_layout

\begin_layout Enumerate
Run:
\end_layout

\begin_deeper
\begin_layout Code
gnome-keyboard-properties
\end_layout

\end_deeper
\begin_layout Enumerate
Choose the 
\begin_inset Quotes eld
\end_inset

Layout
\begin_inset Quotes erd
\end_inset

 tab and click on the 
\begin_inset Quotes eld
\end_inset

Add
\begin_inset Quotes erd
\end_inset

 button.
 This will open a new window which contains a list of layouts ordered by
 country.
 
\end_layout

\begin_layout Enumerate
Scroll down the list till you find 
\begin_inset Quotes eld
\end_inset

Sri Lanka
\begin_inset Quotes erd
\end_inset

 and then highlight it by clicking on it.
 The Sinhala layout is the default in the Sri Lanka layouts file, so you
 do NOT need to click the expand triangle icon.
 Then press 
\begin_inset Quotes eld
\end_inset

OK
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Choose the 
\begin_inset Quotes eld
\end_inset

Layout Options
\begin_inset Quotes erd
\end_inset

 tab and click on the text 
\begin_inset Quotes eld
\end_inset

Group Shift/Lock behavior
\begin_inset Quotes erd
\end_inset

.
 A list will expand below this text
\end_layout

\begin_layout Enumerate
Scroll down the list till you find the text 
\begin_inset Quotes eld
\end_inset

Both Shift keys together change group
\begin_inset Quotes erd
\end_inset

.
 Click on the corresponding checkbox.
\end_layout

\begin_layout Enumerate
If you wish to use an LED to indicate the toggling of keyboard layouts,
 click on the text "Use keyboard LED to show alternative group".
 A list will expand below this text
\end_layout

\begin_layout Enumerate
Scroll down the list till you find the text 
\begin_inset Quotes eld
\end_inset

ScrollLock LED shows alternative group
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Using the command line in X:
\end_layout

\begin_layout Enumerate
In an xterm do:
\end_layout

\begin_deeper
\begin_layout Code
setxkbmap -layout "us,lk" -option "grp:shifts_toggle,grp_led:scroll"
\end_layout

\end_deeper
\begin_layout Standard
Alternately, you can directly modify /etc/X11/xorg.conf:
\end_layout

\begin_layout Enumerate
To add the new lk keyboard layout, look for this line:
\end_layout

\begin_deeper
\begin_layout Code
Section "InputDevice"
\end_layout

\begin_layout Standard
There will probably be two such lines, one for the keyboard and another
 for the mouse.
 Go to the keyboard related line.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Then add 'lk' to a line that looks like:
\end_layout

\begin_deeper
\begin_layout Code
Option "XkbLayout" "us,lk"
\end_layout

\end_deeper
\begin_layout Enumerate
Also add a mechanism to switch between 'us' and 'lk' and indicate which
 LED should be used:
\end_layout

\begin_deeper
\begin_layout Code
Option "XkbOptions" "grp:shifts_toggle,grp_led:scroll"
\end_layout

\end_deeper
\begin_layout Enumerate
If asked by the window manager, reset keyboard defaults to the X defaults.
\end_layout

\begin_layout Paragraph
XFree86 4.3+ or Xorg 6.7+
\end_layout

\begin_layout Standard
In the example below I have chosen the ALT keys to switch between the Sinhala
 phonetic layout and the US QWERTY layout.
 Hold one of the ALT keys down and then press the other ALT key, this should
 toggle between the layouts.
\end_layout

\begin_layout Enumerate
Download the keyboard layout from:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[sin]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/keymaps/sin?root=sinhala}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Copy the keyboard layout to:
\end_layout

\begin_deeper
\begin_layout Code
/etc/X11/xkb/symbols/pc/
\end_layout

\end_deeper
\begin_layout Enumerate
There are two options:
\end_layout

\begin_deeper
\begin_layout Enumerate
In an xterm do:
\end_layout

\begin_deeper
\begin_layout Code
setxkbmap -layout "sin,us" -option "grp:alts_toggle,grp_led:scroll"
\end_layout

\end_deeper
\begin_layout Enumerate
Or alternately, edit the /etc/X11/XF86Config or /etc/X11/xorg.conf file.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
To add the new 'sin' keyboard layout, look for this line:
\end_layout

\begin_deeper
\begin_layout Code
Section "InputDevice"
\end_layout

\begin_layout Standard
There will probably be two such lines, one for the keyboard and another
 for the mouse.
 Go to the keyboard related line.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Then add 'sin' to a line that looks like:
\end_layout

\begin_deeper
\begin_layout Code
Option "XkbLayout" "sin,us"
\end_layout

\end_deeper
\begin_layout Enumerate
Also add a mechanism to switch between 'us' and 'sin' and indicate which
 LED should be used:
\end_layout

\begin_deeper
\begin_layout Code
Option "XkbOptions" "grp:alts_toggle,grp_led:scroll"
\end_layout

\end_deeper
\begin_layout Enumerate
If asked by the window manager, reset keyboard defaults to the X defaults.
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
Character Maps
\end_layout

\begin_layout Standard
You can use a Unicode Character Map program to copy and paste Sinhala characters
 into your program/document.
 Available programs are:
\end_layout

\begin_layout Itemize
gucharmap
\end_layout

\begin_layout Subsection
Locales
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
TODO
\end_layout

\end_inset


\end_layout

\begin_layout Section
Developer Notes
\end_layout

\begin_layout Itemize
Savannah Sinhala Project: 
\begin_inset LatexCommand \htmlurl[http://savannah.nongnu.org/projects/sinhala/]{http://savannah.nongnu.org/projects/sinhala/}

\end_inset


\end_layout

\begin_layout Itemize
Sourceforge Sinhala Project: 
\begin_inset LatexCommand \htmlurl[http://sourceforge.net/projects/sinhala/]{http://sourceforge.net/projects/sinhala/}

\end_inset


\end_layout

\begin_layout Subsection
Open Type Fonts
\end_layout

\begin_layout Subsubsection
List of feature tags
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://partners.adobe.com/public/developer/opentype/index_tag3.html]{http://partners.adobe.com/public/developer/opentype/index_tag3.html}

\end_inset


\end_layout

\begin_layout Subsubsection
Glyph Naming
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://partners.adobe.com/public/developer/en/opentype/aglfn13.txt]{http://partners.adobe.com/public/developer/en/opentype/aglfn13.txt}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://partners.adobe.com/public/developer/opentype/index_glyph.html]{http://partners.adobe.com/public/developer/opentype/index_glyph.html}

\end_inset


\end_layout

\begin_layout Subsubsection
Indic
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.microsoft.com/typography/OpenType%20Dev/indic/intro.mspx]{http://www.microsoft.com/typography/OpenType%20Dev/indic/intro.mspx}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Indic FAQ at Unicode.org]{http://unicode.org/faq/indic.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Indic Working Group at Unicode.org]{http://unicode.org/~emuller/iwg/}

\end_inset


\end_layout

\begin_layout Subsubsection
How Freefont obtained Sinhala glyphs
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://mail.gnu.org/archive/html/freefont-bugs/2003-03/msg00000.html]{http://mail.gnu.org/archive/html/freefont-bugs/2003-03/msg00000.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://mail.gnu.org/archive/html/freefont-bugs/2003-04/msg00001.html]{http://mail.gnu.org/archive/html/freefont-bugs/2003-04/msg00001.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://mail.gnu.org/archive/html/freefont-bugs/2003-05/msg00005.html]{http://mail.gnu.org/archive/html/freefont-bugs/2003-05/msg00005.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://mail.gnu.org/archive/html/freefont-bugs/2003-08/msg00002.html]{http://mail.gnu.org/archive/html/freefont-bugs/2003-08/msg00002.html}

\end_inset


\end_layout

\begin_layout Subsection
Renderer
\end_layout

\begin_layout Standard
The top of tree Pango (since 1.8.2) & ICU (since 3.6) now support SLS1134.
\end_layout

\begin_layout Subsubsection
Pango
\end_layout

\begin_layout Standard
Pango's Indic renderer is based on ICU's Indic renderer.
\end_layout

\begin_layout Standard
The original patch to add Sinhala support was created by Harsha Senanayake
 for ICU 
\begin_inset Foot
status open

\begin_layout Standard
http://marc.theaimsgroup.com/?t=106354110900001&r=1&w=2
\end_layout

\end_inset

and later ported to Pango.
 The Pango patch was ported to the latest version of Pango by Chamath Keppitiyag
ama.
 It was submitted to bugzilla by Anuradha Ratnaweera
\begin_inset Foot
status open

\begin_layout Standard
http://bugzilla.gnome.org/show_bug.cgi?id=153517
\end_layout

\end_inset

.
 Harshula Jayasuriya modified the Pango state table & ZWJ handling 
\begin_inset Foot
status open

\begin_layout Standard
http://bugzilla.gnome.org/show_bug.cgi?id=161981
\end_layout

\end_inset

 & 
\begin_inset Foot
status open

\begin_layout Standard
http://bugzilla.gnome.org/show_bug.cgi?id=302577
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
The Pango code for Sinhala and Indic rendering is common and can be found
 in the Pango source at:
\end_layout

\begin_layout Code
modules/indic/
\end_layout

\begin_layout Standard
One of the most important files to understand is:
\end_layout

\begin_layout Code
modules/indic/indic-ot-class-tables.c
\end_layout

\begin_layout Standard
Particularly how the function:
\end_layout

\begin_layout Code
indic_ot_find_syllable()
\end_layout

\begin_layout Standard
works.
\end_layout

\begin_layout Standard
Next have a look at the file:
\end_layout

\begin_layout Code
modules/indic/indic-ot.c
\end_layout

\begin_layout Standard
and the function:
\end_layout

\begin_layout Code
indic_ot_reorder()
\end_layout

\begin_layout Subsubsection
ICU
\end_layout

\begin_layout Standard
Owen Taylor (Pango) submitted the Pango Sinhala patch to the ICU project
 
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=4298
\end_layout

\end_inset

.
 Eric Mader (ICU) ported the Pango patch to ICU and checked-in the changes
 to ICU 3.6.
 Then Eric added the state table & ZWJ modifications from Pango to ICU 3.6
 
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=4711
\end_layout

\end_inset

 & 
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=5057
\end_layout

\end_inset

.
\end_layout

\begin_layout Paragraph
Patches:
\end_layout

\begin_layout Itemize
ICU 2.6 Sinhala patch 
\begin_inset LatexCommand \htmlurl[http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-2.6-oo-sinhala1.patch?root=sinhala]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-2.6-oo-sinhala1.patch?root=sinhala}

\end_inset


\end_layout

\begin_layout Itemize
ICU 3.4 Sinhala patch 
\begin_inset LatexCommand \htmlurl[http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-3.4-sinhala1.patch?root=sinhala]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-3.4-sinhala1.patch?root=sinhala}

\end_inset


\end_layout

\begin_layout Itemize
ICU 3.6 Sinhala patch 
\begin_inset LatexCommand \htmlurl[http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-3.6-sinhala1.patch?root=sinhala]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-3.6-sinhala1.patch?root=sinhala}

\end_inset


\end_layout

\begin_layout Paragraph
Split dependent vowel modifier (diga o) issue
\end_layout

\begin_layout Standard
There's an issue with U+0DDD (dependent vowel diga o) that can cause Open
 Office to crash.
 Opening this text file will crash Open Office and ICU 3.6:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-crash-testcase-dv-oo.txt?root=sinhala]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/icu-crash-testcase-dv-oo.txt?root=sinhala}

\end_inset


\end_layout

\begin_layout Standard
The worstCaseExpansion for Sinhala was set to 3 when it should have been
 set to 4.
 The dependent vowel 'oo' (U+0DDD) consists of (kombuva)(dotted-circle)(aela-pil
la)(al-lakuna) which are 4 glyphs.
 As a result of the worstCaseExpansion being 3, memory was probably being
 allocated for 3 glyphs when memory was required for 4 glyphs.
 The actual crash occurred when unallocated memory was being freed.
\end_layout

\begin_layout Standard
Caolan McNamara also found and fixed this bug.
 
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=5501
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Call Tree
\end_layout

\begin_layout Enumerate
source/layoutex/ParagraphLayout.cpp
\end_layout

\begin_deeper
\begin_layout Standard
ParagraphLayout::ParagraphLayout(const LEUnicode chars[], le_int32 count,
 const FontRuns *fontRuns, const ValueRuns *levelRuns, const ValueRuns *scriptRu
ns, const LocaleRuns *localeRuns, UBiDiLevel paragraphLevel, le_bool vertical,
 LEErrorCode &status)
\end_layout

\begin_layout Enumerate
source/layout/LayoutEngine.cpp: 
\end_layout

\begin_deeper
\begin_layout Standard
LayoutEngine *LayoutEngine::layoutEngineFactory(const LEFontInstance *fontInstan
ce, le_int32 scriptCode, le_int32 languageCode, LEErrorCode &success)
\end_layout

\end_deeper
\begin_layout Enumerate
LayoutEngine *LayoutEngine::layoutEngineFactory(const LEFontInstance *fontInstan
ce, le_int32 scriptCode, le_int32 languageCode, le_int32 typoFlags, LEErrorCode
 &success)
\end_layout

\begin_deeper
\begin_layout Itemize
IndicOpenTypeLayoutEngine::IndicOpenTypeLayoutEngine(const LEFontInstance
 *fontInstance, le_int32 scriptCode, le_int32 languageCode, le_int32 typoFlags,
 const GlyphSubstitutionTableHeader *gsubTable) 
\end_layout

\begin_layout Itemize
IndicOpenTypeLayoutEngine::IndicOpenTypeLayoutEngine(const LEFontInstance
 *fontInstance, le_int32 scriptCode, le_int32 languageCode, le_int32 typoFlags)
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
source/layout/LayoutEngine.cpp
\end_layout

\begin_deeper
\begin_layout Standard
le_int32 LayoutEngine::layoutChars(const LEUnicode chars[], le_int32 offset,
 le_int32 count, le_int32 max, le_bool rightToLeft, float x, float y, LEErrorCod
e &success)
\end_layout

\begin_layout Enumerate
le_int32 LayoutEngine::computeGlyphs(const LEUnicode chars[], le_int32 offset,
 le_int32 count, le_int32 max, le_bool rightToLeft, LEGlyphStorage &glyphStorage
, LEErrorCode &success)
\end_layout

\begin_deeper
\begin_layout Enumerate
source/layout/IndicLayoutEngine.cpp
\end_layout

\begin_deeper
\begin_layout Standard
le_int32 IndicOpenTypeLayoutEngine::characterProcessing(const LEUnicode
 chars[], le_int32 offset, le_int32 count, le_int32 max, le_bool rightToLeft,
 LEUnicode *&outChars, LEGlyphStorage &glyphStorage, LEErrorCode &success)
\end_layout

\begin_layout Enumerate
source/layout/IndicReordering.cpp
\end_layout

\begin_deeper
\begin_layout Standard
le_int32 IndicReordering::reorder(const LEUnicode *chars, le_int32 charCount,
 le_int32 scriptCode, LEUnicode *outChars, LEGlyphStorage &glyphStorage,
 MPreFixups **outMPreFixups)
\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
engine->getGlyphs(fStyleRunInfo[run].glyphs, layoutStatus);
\end_layout

\begin_layout Enumerate
engine->getGlyphPositions(fStyleRunInfo[run].positions, layoutStatus);
\end_layout

\begin_layout Enumerate
engine->getCharIndices(&fGlyphToCharMap[glyphBase], runStart, layoutStatus);
\end_layout

\begin_layout Subsection
Firefox/Mozilla
\end_layout

\begin_layout Standard
Interestingly, Debian, Fedora Core and Ubuntu decided to address enabling
 Pango in Firefox in completely different ways.
\end_layout

\begin_layout Subsubsection
Debian
\end_layout

\begin_layout Standard
Since Debian 4.0 (Etch), Pango is enabled by default.
\end_layout

\begin_layout Subsubsection
Ubuntu
\end_layout

\begin_layout Paragraph
Ubuntu 5.10
\end_layout

\begin_layout Standard
Ubuntu 5.10 enabled Pango by default.
 Have a look at:
\end_layout

\begin_layout Code
/usr/bin/mozilla-firefox 
\end_layout

\begin_layout Standard
which contains the code:
\end_layout

\begin_layout Code
##
\end_layout

\begin_layout Code
## Set MOZ_ENABLE_PANGO
\end_layout

\begin_layout Code
##
\end_layout

\begin_layout Code
MOZ_ENABLE_PANGO=1
\end_layout

\begin_layout Code
export MOZ_ENABLE_PANGO
\end_layout

\begin_layout Code

\end_layout

\begin_layout Paragraph
Ubuntu 6.06
\end_layout

\begin_layout Standard
On the other hand Ubuntu 6.06, decided to disable Pango in Firefox by default
 except for a pre-determined list of locales.
 The extensive discussion can be found here:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[https://launchpad.net/distros/ubuntu/+source/firefox/+bug/32561]{https://launchpad.net/distros/ubuntu/+source/firefox/+bug/32561}

\end_inset


\end_layout

\begin_layout Standard
Have a look at:
\end_layout

\begin_layout Code
/usr/bin/mozilla-firefox 
\end_layout

\begin_layout Standard
which contains the code:
\end_layout

\begin_layout Code
if [ "x${MOZ_DISABLE_PANGO}" = x ]; then
\end_layout

\begin_layout Code
    if egrep '^(bn|gu|hi|kn|ml|mr|ne|pa|ta|te)_' 
\backslash

\end_layout

\begin_layout Code
        /var/lib/locales/supported.d/*[^~] >/dev/null 2>&1; then
\end_layout

\begin_layout Code
        MOZ_DISABLE_PANGO=0
\end_layout

\begin_layout Code
    else
\end_layout

\begin_layout Code
        MOZ_DISABLE_PANGO=1
\end_layout

\begin_layout Code
    fi
\end_layout

\begin_layout Code
    export MOZ_DISABLE_PANGO
\end_layout

\begin_layout Code
fi
\end_layout

\begin_layout Code
if [ "x${MOZ_DISABLE_PANGO}" = x0 ]; then
\end_layout

\begin_layout Code
    unset MOZ_DISABLE_PANGO
\end_layout

\begin_layout Code
fi
\end_layout

\begin_layout Standard
This means that Ubuntu 6.06 users that need Pango enabled in Firefox need
 to set an environment variable
\end_layout

\begin_layout Code
MOZ_DISABLE_PANGO=0
\end_layout

\begin_layout Standard
You can see the difference by running Firefox at the command line like so:
\end_layout

\begin_layout Code
# MOZ_DISABLE_PANGO=0 mozilla-firefox
\end_layout

\begin_layout Subsubsection
Fedora Core
\end_layout

\begin_layout Standard
Since Fedora Core 4, Pango is enabled in Firefox by default.
 In order to disable Pango in Firefox an environment variable has to be
 set:
\end_layout

\begin_layout Code
MOZ_DISABLE_PANGO=1
\end_layout

\begin_layout Standard
You can see the difference by running Firefox at the command line like so:
\end_layout

\begin_layout Code
# MOZ_DISABLE_PANGO=1 firefox
\end_layout

\begin_layout Standard
Have a look at:
\end_layout

\begin_layout Code
/usr/bin/firefox 
\end_layout

\begin_layout Standard
for an explanation.
\end_layout

\begin_layout Paragraph
Fedora Core 4 
\begin_inset Foot
status open

\begin_layout Standard
http://cvs.fedora.redhat.com/viewcvs/*checkout*/rpms/firefox/devel/firefox.sh.in?rev=
1.8
\end_layout

\end_inset


\end_layout

\begin_layout Code
##
\end_layout

\begin_layout Code
## Set MOZ_ENABLE_PANGO is no longer used because Pango is enabled by default
\end_layout

\begin_layout Code
## you may use MOZ_DISABLE_PANGO=1 to force disabling of pango
\end_layout

\begin_layout Code
##
\end_layout

\begin_layout Code
#MOZ_DISABLE_PANGO=1
\end_layout

\begin_layout Code
#export MOZ_DISABLE_PANGO
\end_layout

\begin_layout Paragraph
Fedora Core 5 
\begin_inset Foot
status open

\begin_layout Standard
http://cvs.fedora.redhat.com/viewcvs/*checkout*/rpms/firefox/devel/firefox.sh.in?rev=
1.11
\end_layout

\end_inset


\end_layout

\begin_layout Code
##
\end_layout

\begin_layout Code
## In order to better support certain scripts (such as Indic and some CJK
 
\end_layout

\begin_layout Code
## scripts), Fedora builds its Firefox, with permission from the Mozilla
 
\end_layout

\begin_layout Code
## Corporation, with the Pango system as its text renderer.
  This change 
\end_layout

\begin_layout Code
## is known to break rendering of MathML, and may negatively impact 
\end_layout

\begin_layout Code
## performance on some pages.
  To disable the use of Pango, set 
\end_layout

\begin_layout Code
## MOZ_DISABLE_PANGO=1 in your environment before launching Firefox.
\end_layout

\begin_layout Code
##
\end_layout

\begin_layout Code
#
\end_layout

\begin_layout Code
# MOZ_DISABLE_PANGO=1
\end_layout

\begin_layout Code
# export MOZ_DISABLE_PANGO
\end_layout

\begin_layout Code
#
\end_layout

\begin_layout Subsubsection
Epiphany Browser
\end_layout

\begin_layout Standard
Changelog:
\end_layout

\begin_layout Code
2006-01-27  Christian Persch  <chpe at cvs dot gnome dot org>
\end_layout

\begin_layout Code
        * src/ephy-main.c: (main):
\end_layout

\begin_layout Code
        Disable pango rendering by default, unless MOZ_ENABLE_PANGO env
\end_layout

\begin_layout Code
        var is set.
 Bug #328844.
\end_layout

\begin_layout Code

\end_layout

\begin_layout Standard
src/ephy-main.c:
\end_layout

\begin_layout Code
        /* Work around bug #328844, and avoid the gecko+pango performance
 problem */
\end_layout

\begin_layout Code
        env = g_getenv ("MOZ_ENABLE_PANGO");
\end_layout

\begin_layout Code
        enable_pango = env != NULL &&
\end_layout

\begin_layout Code
                       env[0] != '
\backslash
0' &&
\end_layout

\begin_layout Code
                       g_ascii_strtoull (env, NULL, 10) != 0;
\end_layout

\begin_layout Code
        if (eel_gconf_get_boolean (CONF_GECKO_ENABLE_PANGO))
\end_layout

\begin_layout Code
        {
\end_layout

\begin_layout Code
                g_print ("NOTE: Enabling gecko pango renderer; this may
 cause performance degradation.
\backslash
n"
\end_layout

\begin_layout Code
                         "You can set " CONF_GECKO_ENABLE_PANGO " to 
\backslash
"false
\backslash
" to disable it.
\backslash
n");
\end_layout

\begin_layout Code
        }
\end_layout

\begin_layout Code
        else if (!enable_pango)
\end_layout

\begin_layout Code
        {
\end_layout

\begin_layout Code
                g_setenv ("MOZ_DISABLE_PANGO", "1", TRUE);
\end_layout

\begin_layout Code
        }
\end_layout

\begin_layout Standard
Epiphany also has a file, data/epiphany-pango.schemas containing a list of
 locales which require Pango to be enabled by default.
\end_layout

\begin_layout Subsection
Open Office
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://wiki.services.openoffice.org/wiki/Debugging]{http://wiki.services.openoffice.org/wiki/Debugging}

\end_inset


\end_layout

\begin_layout Subsubsection
Open Office 2.0.4
\end_layout

\begin_layout Standard
Whilst working on the patches for adding Sinhala support to ICU, the renderer
 of Open Office, I observed that the ZWJ characters do not appear to reach
 ICU.
 
\begin_inset Foot
status open

\begin_layout Standard
http://mail.lug.lk/lurker/message/20060410.130454.19cefb01.en.html
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then, Caolan McNamara found the Open Office file that filters ZWJ and ZWNJ.
 
\begin_inset Foot
status open

\begin_layout Standard
http://www.openoffice.org/issues/show_bug.cgi?id=68047
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The source file:
\end_layout

\begin_layout Code
vcl/source/gdi/sallayout.cxx
\end_layout

\begin_layout Standard
contains a function:
\end_layout

\begin_layout Code
inline bool IsControlChar( sal_Unicode cChar )
\end_layout

\begin_layout Standard
This function tells a caller that characters U+200B to U+200F are control
 characters.
\end_layout

\begin_layout Standard
In the source file:
\end_layout

\begin_layout Code
linguistic/source/misc.cxx
\end_layout

\begin_layout Standard
two functions, 
\end_layout

\begin_layout Code
static INT16 GetOrigWordPos( const OUString &rOrigWord, INT16 nPos )
\end_layout

\begin_layout Standard
and
\end_layout

\begin_layout Code
INT32 GetPosInWordToCheck( const OUString &rTxt, INT32 nPos )
\end_layout

\begin_layout Standard
call 
\end_layout

\begin_layout Code
inline bool IsControlChar( sal_Unicode cChar )
\end_layout

\begin_layout Standard
when doing lingustic analysis for what appears to be spelling purposes.
 Even found some comments written in, I assume, German.
\end_layout

\begin_layout Standard
In the source file:
\end_layout

\begin_layout Code
vcl/source/gdi/sallayout.cxx
\end_layout

\begin_layout Standard
there is a function:
\end_layout

\begin_layout Code
void ImplLayoutArgs::AddRun( int nCharPos0, int nCharPos1, bool bRTL )
\end_layout

\begin_layout Standard
which calls the function:
\end_layout

\begin_layout Code
inline bool IsControlChar( sal_Unicode cChar )
\end_layout

\begin_layout Standard
it's purpose is to:
\end_layout

\begin_layout Code
// add a run after splitting it up to get rid of control chars
\end_layout

\begin_layout Standard
It should be noted that this function handles RTL text in a different way
 to LTR text.
 My initial reaction is that should not be the case.
 However, I have not looked into it any further.
\end_layout

\begin_layout Standard
Compiling Open Office 2.0.4 on Debian Etch on a Pentium M 2.13 GHz with 1 GiB
 RAM took approximately 10 hours and required 10 GBs of additional hard
 drive space for the source and the compiled files.
\end_layout

\begin_layout Subsection
Input Methods
\end_layout

\begin_layout Standard

\series medium
The recommended infrastructure for keyboard layouts 
\series default
are
\series medium
 
\series default
XKB, XIM, IIIMF
\begin_inset Foot
status open

\begin_layout Standard
http://www.openi18n.org/modules.php?op=modload&name=Sections&file=index&req=viewart
icle&artid=103&page=1
\end_layout

\end_inset

, m17n 
\begin_inset Foot
status open

\begin_layout Standard
http://www.m17n.org/
\end_layout

\end_inset

 and SCIM
\begin_inset Foot
status open

\begin_layout Standard
http://www.scim-im.org/
\end_layout

\end_inset

.
 The recommended infrastructures are XKB, for simple one-to-one keyboard
 layouts, and SCIM/m17n for complex keyboard layouts.
 XKB is a component of Xorg.
\end_layout

\begin_layout Subsubsection
Keyboard Layouts
\end_layout

\begin_layout Enumerate
Wijesekera Compatible
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_1.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_1.html}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
ASCII Compatible Wijesekera
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_2.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_2.html}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Phonetic (Static)
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Phonetic (Dynamic)
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_4.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_4.html}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
A Unicode Sinhala Font has to be installed in order to read the Keyboard
 Layouts.
 
\end_layout

\begin_layout Standard
You can use 
\emph on
showkey
\emph default
 in linux to display the scancode.
\end_layout

\begin_layout Itemize
57 - space
\end_layout

\begin_layout Itemize
56 - left alt
\end_layout

\begin_layout Itemize
100 - right alt
\end_layout

\begin_layout Itemize
29 - left ctrl
\end_layout

\begin_layout Itemize
97 - right ctrl
\end_layout

\begin_layout Itemize
42 - left shift
\end_layout

\begin_layout Itemize
54 - right shift
\end_layout

\begin_layout Standard
Look in the linux source:
\end_layout

\begin_layout Code
drivers/char/keyboard.c
\end_layout

\begin_layout Standard
Look for the function:
\end_layout

\begin_layout Code
getkeycode()
\end_layout

\begin_layout Subsubsection
XKB - adding a new keyboard layout
\end_layout

\begin_layout Standard
All you need to do is just copy the keyboard layout file into the correct
 directory:
\end_layout

\begin_layout Code
/etc/X11/xkb/symbols/
\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Code
/etc/X11/xkb/symbols/pc/
\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Code
/usr/share/X11/xkb/symbols
\end_layout

\begin_layout Standard
However, for completeness some files in these directories:
\end_layout

\begin_layout Code
/etc/X11/
\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Code
/usr/X11R6/lib/X11/
\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Code
/usr/share/X11/
\end_layout

\begin_layout Standard
need to be modified, namely these files:
\end_layout

\begin_layout Code
xkb/rules/{xorg,xfree86}
\end_layout

\begin_layout Code
xkb/rules/{xorg,xfree86}.lst
\end_layout

\begin_layout Code
xkb/rules/{xorg,xfree86}.xml
\end_layout

\begin_layout Code
xkb/symbols.dir
\end_layout

\begin_layout Standard
To test a loaded keyboard layout:
\end_layout

\begin_layout Code
setxkbmap -print | xkbcomp -w 10 -xkb - <outfile>
\end_layout

\begin_layout Subsubsection
SCIM
\end_layout

\begin_layout Standard
SCIM can be used as the frontend, which is exposed to the user, and the
 backend that maps keycodes to codepoints.
 Or SCIM can be used as a frontend for other backends.
 e.g.
 m17n can be a backend.
\end_layout

\begin_layout Subsubsection
m17n
\end_layout

\begin_layout Standard
The m17n backend keyboard layout definition file is a text file.
 The documentation can be found:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.m17n.org/m17n-lib/m17n-docs/m17nDBFormat.html#mdbIM]{http://www.m17n.org/m17n-lib/m17n-docs/m17nDBFormat.html#mdbIM}

\end_inset


\end_layout

\begin_layout Subsubsection
xmodmap
\end_layout

\begin_layout Standard
The xmodmap keyboard layout is not fully functional, hence it is recommended
 you use the X Keyboard Extension keyboard layout.
 To familiarise yourself with this keyboard layout, read:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html}

\end_inset


\end_layout

\begin_layout Enumerate
Download the keyboard layout from:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[sin.xmodmap]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/keymaps/sin.xmodmap?root=sinhala}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Then run xmodmap:
\end_layout

\begin_deeper
\begin_layout Code
xmodmap sin.xmodmap
\end_layout

\end_deeper
\begin_layout Subsubsection
gvim
\end_layout

\begin_layout Standard
To familiarise yourself with this keyboard layout, read:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html]{http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html}

\end_inset


\end_layout

\begin_layout Enumerate
Download the keyboard layout and redirector from:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[sinhala-phonetic_utf-8.vim]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/keymaps/sinhala-phonetic_utf-8.vim?root=sinhala}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[sinhala.vim]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/keymaps/sinhala.vim?root=sinhala}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Copy the keyboard layout and redirector to ~/.vim/keymap/
\end_layout

\begin_layout Enumerate
Start gvim
\end_layout

\begin_layout Enumerate
Need to disable the menu so that you can use the 'alt' key.
\end_layout

\begin_deeper
\begin_layout Code
set guioptions-=m
\end_layout

\end_deeper
\begin_layout Enumerate
Select the new keyboard layout, using the redirector, by typing:
\end_layout

\begin_deeper
\begin_layout Code
set keymap=sinhala
\end_layout

\begin_layout Standard
or select the new keyboard layout directly by typing:
\end_layout

\begin_layout Code
set keymap=sinhala-phonetic_utf-8
\end_layout

\begin_layout Standard
To toggle between the Sinhala keyboard layout and the standard ASCII keyboard
 layout, press <Ctrl> <6> whilst in insert mode.
\end_layout

\end_deeper
\begin_layout Subsection
Databases
\end_layout

\begin_layout Subsubsection
MySQL 5.0.27
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Unicode and Other Funny Characters]{http://dev.mysql.com/tech-resources/articles/4.1/unicode.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[MySQL 5.0 Reference Manual :: 5 Database Administration :: 5.2 mysqld ? The MySQL Server :: 5.2.1 Option and Variable Reference]{http://dev.mysql.com/doc/refman/5.0/en/mysqld-option-tables.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[MySQL 5.0 Reference Manual :: 10 Character Set Support]{http://dev.mysql.com/doc/refman/5.0/en/charset.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[MySQL Internals Manual :: 4 Important Algorithms and Structures :: 4.10 Character/Collation Sets]{http://dev.mysql.com/doc/internals/en/charsets.html}

\end_inset


\end_layout

\begin_layout Paragraph
Terminology
\end_layout

\begin_layout Itemize
ci = case insensitive
\end_layout

\begin_layout Itemize
cs = case sensitive
\end_layout

\begin_layout Itemize
bin = binary
\end_layout

\begin_layout Paragraph
Useful Commands
\end_layout

\begin_layout Itemize
SHOW CHARACTER SET;
\end_layout

\begin_layout Itemize
SHOW COLLATION;
\end_layout

\begin_layout Itemize
SHOW COLLATION like 'ucs%';
\end_layout

\begin_layout Itemize
SHOW COLLATION like 'utf8%';
\end_layout

\begin_layout Itemize
SET NAMES 'utf8'; // after connecting to server if the server has NOT set
 'skip-character-set-client-handshake'
\end_layout

\begin_layout Itemize
SHOW CREATE TABLE <table-name>
\end_layout

\begin_layout Itemize
SHOW VARIABLES;
\end_layout

\begin_layout Itemize

\backslash
s
\end_layout

\begin_layout Paragraph
Setup MySQL Server
\end_layout

\begin_layout Standard
Edit the file /etc/mysql/my.cnf and add to the [mysqld] section:
\end_layout

\begin_layout Itemize
default-character_set=utf8
\end_layout

\begin_layout Itemize
skip-character-set-client-handshake
\end_layout

\begin_layout Standard
This is done to ensure that UTF-8 is the default encoding for the server
 and client.
\end_layout

\begin_layout Paragraph
Files requiring modification
\end_layout

\begin_layout Itemize
mysql/config/ac-macros/character_sets.m4
\end_layout

\begin_layout Itemize
mysql/mysys/charset-def.c
\end_layout

\begin_layout Itemize
mysql/strings/ctype-uca.c
\end_layout

\begin_layout Itemize
mysql/configure (generated)
\end_layout

\begin_layout Paragraph
Code
\end_layout

\begin_layout Itemize
mysql/strings/ctype-uca.c
\end_layout

\begin_layout Code
/*
\end_layout

\begin_layout Code
  Collation language is implemented according to
\end_layout

\begin_layout Code
  subset of ICU Collation Customization (tailorings):
\end_layout

\begin_layout Code
  http://icu.sourceforge.net/userguide/Collate_Customization.html
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  Collation language elements:
\end_layout

\begin_layout Code
  Delimiters:
\end_layout

\begin_layout Code
    space   - skipped
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  <char> :=  A-Z | a-z | 
\backslash
uXXXX
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  Shift command:
\end_layout

\begin_layout Code
    <shift>  := &       - reset at this letter.
 
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  Diff command:
\end_layout

\begin_layout Code
    <d1> :=  <     - Identifies a primary difference.
\end_layout

\begin_layout Code
    <d2> :=  <<    - Identifies a secondary difference.
\end_layout

\begin_layout Code
    <d3> := <<<    - Idenfifies a tertiary difference.
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  Collation rules:
\end_layout

\begin_layout Code
    <ruleset> :=  <rule>  { <ruleset> }
\end_layout

\begin_layout Code
    
\end_layout

\begin_layout Code
    <rule> :=   <d1>    <string>
\end_layout

\begin_layout Code
              | <d2>    <string>
\end_layout

\begin_layout Code
              | <d3>    <string>
\end_layout

\begin_layout Code
              | <shift> <char>
\end_layout

\begin_layout Code
    
\end_layout

\begin_layout Code
    <string> := <char> [ <string> ]
\end_layout

\begin_layout Code
  An example, Polish collation:
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
    &A < 
\backslash
u0105 <<< 
\backslash
u0104
\end_layout

\begin_layout Code
    &C < 
\backslash
u0107 <<< 
\backslash
u0106
\end_layout

\begin_layout Code
    &E < 
\backslash
u0119 <<< 
\backslash
u0118
\end_layout

\begin_layout Code
    &L < 
\backslash
u0142 <<< 
\backslash
u0141
\end_layout

\begin_layout Code
    &N < 
\backslash
u0144 <<< 
\backslash
u0143
\end_layout

\begin_layout Code
    &O < 
\backslash
u00F3 <<< 
\backslash
u00D3
\end_layout

\begin_layout Code
    &S < 
\backslash
u015B <<< 
\backslash
u015A
\end_layout

\begin_layout Code
    &Z < 
\backslash
u017A <<< 
\backslash
u017B    
\end_layout

\begin_layout Code
*/
\end_layout

\begin_layout Itemize
mysql/include/m_ctype.h
\end_layout

\begin_layout Code
typedef struct charset_info_st
\end_layout

\begin_layout Code
{
\end_layout

\begin_layout Code
  uint      number;
\end_layout

\begin_layout Code
  uint      primary_number;
\end_layout

\begin_layout Code
  uint      binary_number;
\end_layout

\begin_layout Code
  uint      state;
\end_layout

\begin_layout Code
  const char *csname;
\end_layout

\begin_layout Code
  const char *name;
\end_layout

\begin_layout Code
  const char *comment;
\end_layout

\begin_layout Code
  const char *tailoring;
\end_layout

\begin_layout Code
  uchar    *ctype;
\end_layout

\begin_layout Code
  uchar    *to_lower;
\end_layout

\begin_layout Code
  uchar    *to_upper;
\end_layout

\begin_layout Code
  uchar    *sort_order;
\end_layout

\begin_layout Code
  uint16   *contractions;
\end_layout

\begin_layout Code
  uint16   **sort_order_big;
\end_layout

\begin_layout Code
  uint16      *tab_to_uni;
\end_layout

\begin_layout Code
  MY_UNI_IDX  *tab_from_uni;
\end_layout

\begin_layout Code
  MY_UNICASE_INFO **caseinfo;
\end_layout

\begin_layout Code
  uchar     *state_map;
\end_layout

\begin_layout Code
  uchar     *ident_map;
\end_layout

\begin_layout Code
  uint      strxfrm_multiply;
\end_layout

\begin_layout Code
  uchar     caseup_multiply;
\end_layout

\begin_layout Code
  uchar     casedn_multiply;
\end_layout

\begin_layout Code
  uint      mbminlen;
\end_layout

\begin_layout Code
  uint      mbmaxlen;
\end_layout

\begin_layout Code
  uint16    min_sort_char;
\end_layout

\begin_layout Code
  uint16    max_sort_char; /* For LIKE optimization */
\end_layout

\begin_layout Code
  uchar     pad_char;
\end_layout

\begin_layout Code
  my_bool   escape_with_backslash_is_dangerous;
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
  MY_CHARSET_HANDLER *cset;
\end_layout

\begin_layout Code
  MY_COLLATION_HANDLER *coll;
\end_layout

\begin_layout Code
  
\end_layout

\begin_layout Code
} CHARSET_INFO;
\end_layout

\begin_layout Itemize
mysys/charset.c: CHARSET_INFO *all_charsets[256]
\end_layout

\begin_layout Itemize
mysys/charset.c
\end_layout

\begin_deeper
\begin_layout Standard
init_available_charsets()
\end_layout

\begin_layout Itemize
mysys/charset-def.c
\end_layout

\begin_deeper
\begin_layout Standard
init_compiled_charsets()
\end_layout

\begin_layout Itemize
mysys/charset.c
\end_layout

\begin_deeper
\begin_layout Standard
add_compiled_collation()
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
init_state_maps()
\end_layout

\end_deeper
\begin_layout Itemize
mysys/charset.c
\end_layout

\begin_deeper
\begin_layout Standard
get_charset_by_name()
\end_layout

\begin_layout Itemize
get_collation_number()
\end_layout

\begin_deeper
\begin_layout Itemize
get_collation_number_internal()
\end_layout

\end_deeper
\begin_layout Itemize
get_internal_charset()
\end_layout

\end_deeper
\begin_layout Itemize
strings/ctype-uca.c
\end_layout

\begin_deeper
\begin_layout Standard
create_tailoring()
\end_layout

\end_deeper
\begin_layout Paragraph
Testing
\end_layout

\begin_layout Enumerate
Test Swedish (MySQL is a Swedish company) collation algorithm:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset LatexCommand \htmlurl[http://en.wikipedia.org/wiki/Swedish_alphabet]{http://en.wikipedia.org/wiki/Swedish_alphabet}

\end_inset


\end_layout

\begin_layout Code
CREATE TABLE ts (
\end_layout

\begin_layout Code
        id SERIAL PRIMARY KEY,
\end_layout

\begin_layout Code
        letter VARCHAR(10) NOT NULL
\end_layout

\begin_layout Code
) CHARACTER SET utf8;
\end_layout

\begin_layout Standard
Running this collation handler:
\end_layout

\begin_layout Code
SELECT * FROM ts ORDER BY letter COLLATE utf8_swedish_ci;
\end_layout

\begin_layout Standard
results in non-English alphabet characters appearing at the end of the sorted
 alphabet as expected.
\end_layout

\end_deeper
\begin_layout Enumerate
Apply the Sinhala collation patch to MySQL:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[mysql-dfsg-5.0-5.0.27-sinhala1.patch]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/mysql-dfsg-5.0-5.0.27-sinhala1.patch?root=sinhala}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Test new Sinhala collation algorithm:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset LatexCommand \htmlurl[http://en.wikipedia.org/wiki/Sinhala_alphabet]{http://en.wikipedia.org/wiki/Sinhala_alphabet}

\end_inset


\end_layout

\begin_layout Code
CREATE TABLE tl (
\end_layout

\begin_layout Code
        id SERIAL PRIMARY KEY,
\end_layout

\begin_layout Code
        letter VARCHAR(10) NOT NULL
\end_layout

\begin_layout Code
) CHARACTER SET utf8;
\end_layout

\begin_layout Standard
Load the data from this file:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[mysql-data-sinhala.txt]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/mysql-data-sinhala.txt?root=sinhala}

\end_inset


\end_layout

\begin_layout Standard
Running this collation handler:
\end_layout

\begin_layout Code
SELECT * FROM tl ORDER BY letter COLLATE utf8_sinhala_ci;
\end_layout

\begin_layout Standard
results match the Sinhala Character Code for Information Interchange Part
 1 : Collation Sequence.
\end_layout

\begin_layout Standard
Download the output file from:
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[mysql-output-utf8_sinhala_ci.txt]{http://cvs.savannah.nongnu.org/viewcvs/*checkout*/sinhala/patches/mysql-output-utf8_sinhala_ci.txt?root=sinhala}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Need to add a Sinhala collation test to the MySQL test suite:
\end_layout

\begin_deeper
\begin_layout Itemize
mysql/mysql-test/t/ctype_utf8.test
\end_layout

\begin_layout Itemize
mysql/mysql-test/r/ctype_utf8.result
\end_layout

\end_deeper
\begin_layout Subsection
Locales
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
TODO
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Translations
\end_layout

\begin_layout Subsubsection
GNOME
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \url[http://developer.gnome.org/projects/gtp/l10n-guide/]{http://developer.gnome.org/projects/gtp/l10n-guide/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \url[http://developer.gnome.org/doc/tutorials/gnome-i18n/translator.html]{http://developer.gnome.org/doc/tutorials/gnome-i18n/translator.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://developer.gnome.org/projects/gtp/teams.html]{http://developer.gnome.org/projects/gtp/teams.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://l10n-status.gnome.org/]{http://l10n-status.gnome.org/}

\end_inset


\end_layout

\begin_layout Subsubsection
KDE
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[KDE Localization]{http://i18n.kde.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://l10n.kde.org/team-infos.php?teamcode=si]{http://l10n.kde.org/team-infos.php?teamcode=si}

\end_inset


\end_layout

\begin_layout Subsubsection
Ubuntu
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[https://launchpad.net/distros/ubuntu/edgy/+lang/si]{https://launchpad.net/distros/ubuntu/edgy/+lang/si}

\end_inset


\end_layout

\begin_layout Subsection
DONE
\end_layout

\begin_layout Itemize
Renderer
\end_layout

\begin_deeper
\begin_layout Itemize
Create and submit Pango patch - don't implicitly create conjuncts
\begin_inset Foot
status open

\begin_layout Standard
http://bugzilla.gnome.org/show_bug.cgi?id=161981
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Inform bengalinux-core team (India) the implications of the fix to bugzilla.gnome.
org's bug 145233
\begin_inset Foot
status open

\begin_layout Standard
http://sourceforge.net/mailarchive/forum.php?thread_id=6637263&forum_id=12023
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Create and submit Pango patch - Enable touching letters in Sinhala rendering
\begin_inset Foot
status open

\begin_layout Standard
http://bugzilla.gnome.org/show_bug.cgi?id=302577
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Convince Pango and ICU maintainers to emit ZWJ to the font lookup stage.
\end_layout

\begin_layout Itemize
Provide test files and images for ICU Sinhala support 
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=4298
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
ICU: ZWJ Processing in Sinhala
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=4710
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
ICU: Implement PR 37 ZWJ/ZWNJ Behavior 
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=4711
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
ICU: Indic Reordering State Table Allows ZWJ Virama ZWJ
\begin_inset Foot
status open

\begin_layout Standard
http://dev.icu-project.org/cgi-bin/icu-bugs?findid=5057
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Port Pango patches, which add Sinhala support, to ICU for immediate use
 in ICU 3.4
\begin_inset Foot
status open

\begin_layout Standard
http://www.redhat.com/archives/fedora-cvs-commits/2006-May/msg00126.html
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Convince Open Office developers to stop filtering ZWJ and ZWNJ - ZWJ: The
 zero width joiner shouldn't be filtered out 
\begin_inset Foot
status open

\begin_layout Standard
http://qa.openoffice.org/issues/show_bug.cgi?id=68047
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Epiphany - Add si (Sinhala) to the list of locales requiring Pango 
\begin_inset Foot
status open

\begin_layout Standard
http://bugzilla.gnome.org/show_bug.cgi?id=361538
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Ubuntu - Add si (Sinhala) to the list of locales requiring Pango 
\begin_inset Foot
status open

\begin_layout Standard
https://launchpad.net/distros/ubuntu/+source/firefox/+bug/66270/
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Inform of Open Office filtering ZWJ and ZWNJ - Incorrect Bengali rendering
 of ra+japhala 
\begin_inset Foot
status open

\begin_layout Standard
https://launchpad.net/distros/debian/+source/icu/+bug/35085
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Input Methods
\end_layout

\begin_deeper
\begin_layout Itemize
Submit XKB keyboard layout to X Keyboard Configuration Database
\end_layout

\begin_layout Itemize
Submit vim keyboard layout to Bram
\end_layout

\begin_layout Itemize
Submit XKB keyboard layout to xorg
\begin_inset Foot
status open

\begin_layout Standard
https://bugs.freedesktop.org/show_bug.cgi?id=1850
\end_layout

\end_inset

 and xfree86
\begin_inset Foot
status open

\begin_layout Standard
http://bugs.xfree86.org/show_bug.cgi?id=1509
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Submit phonetic static keyboard layout to m17n
\end_layout

\begin_layout Itemize
Test and provide feedback on the m17n Wijesekera input method.
\end_layout

\end_deeper
\begin_layout Itemize
Fonts
\end_layout

\begin_deeper
\begin_layout Itemize
The printing problem was due to the font being an OTF font.
 Once the lklug font was changed to a TTF, the printing problem disappeared.
\end_layout

\begin_layout Itemize
Added a glyph for 
\begin_inset Quotes eld
\end_inset

Kunddaliya
\begin_inset Quotes erd
\end_inset

 to LKLUG font.
\end_layout

\begin_layout Itemize
Reorganised glyphs containing 
\begin_inset Quotes eld
\end_inset

Repaya
\begin_inset Quotes erd
\end_inset

 and added corresponding lookups to LKLUG font.
\end_layout

\end_deeper
\begin_layout Itemize
Standards
\end_layout

\begin_deeper
\begin_layout Itemize
Amend ISO639 to include 'Sinhala' in the languages list alongside 'Sinhalese'.
\end_layout

\begin_layout Itemize
Report an error in the Sinhala Character Code for Information Interchange
 - Part 1: Collation Sequence
\end_layout

\end_deeper
\begin_layout Subsection
TODO
\end_layout

\begin_layout Itemize
Renderer
\end_layout

\begin_deeper
\begin_layout Itemize
ICU bug that crashes Open Office.
\end_layout

\begin_layout Itemize
Support touching letters in QT Renderer.
\end_layout

\begin_layout Itemize
Pango tries to display a 25CC, which is a dotted circle, when a dependent
 vowel is displayed without a consonant.
 However the glyph for 25CC does not appear.
\end_layout

\begin_layout Itemize
see chapter 9 of TUS Unicode - apparently discusses ZWJ/ZWNJ.
\end_layout

\end_deeper
\begin_layout Itemize
Input Methods
\end_layout

\begin_deeper
\begin_layout Itemize
Develop Phonetic & Transliteration standards.
\end_layout

\begin_layout Itemize
Examine SCIM/m17n & implement static & dynamic phonetic keyboard layouts
 and transliteration schemes.
\end_layout

\begin_layout Itemize
See if XKB can be extended to allow multiple codepoints per keycode.
\end_layout

\end_deeper
\begin_layout Itemize
Fonts
\end_layout

\begin_deeper
\begin_layout Itemize
Learn about OT features/order.
\end_layout

\begin_layout Itemize
Discover why the appearance of the Unicode Sinhala fonts deteriorate at
 smaller sizes.
 Is it a smoothing or hinting issue in the font.
 Or an issue with the renderers.
\end_layout

\begin_layout Itemize
Improve the range and correctness of the Unicode Sinhala section in the
 freefont.
\end_layout

\begin_layout Itemize
Develop a standard lookup table for font developers.
\end_layout

\end_deeper
\begin_layout Itemize
Sorting
\end_layout

\begin_deeper
\begin_layout Itemize
Implement established standards
\end_layout

\begin_layout Itemize
String matching - a consonant followed by dependent vowel 'o' should not
 match the same consonant followed by dependent vowel 'oo'.
\end_layout

\end_deeper
\begin_layout Itemize
Other GNU/Linux Infrastructure
\end_layout

\begin_deeper
\begin_layout Itemize
Add Sinhala to /usr/include/X11/keysymdef.h
\end_layout

\begin_layout Itemize
OTF printing problem.
\end_layout

\begin_layout Itemize
Surrounding text / Cursor positioning in gedit with the text <gayanna><al-lakuna
><hayanna><al-lakuna>
\end_layout

\end_deeper
\begin_layout Itemize
Misc
\end_layout

\begin_deeper
\begin_layout Itemize
Submit corrections to Unicode.
 e.g.
 aae Vs aee.
\end_layout

\begin_layout Itemize
UTF-8 should be declared the standard file encoding.
\end_layout

\begin_layout Itemize
Develop Sinhala IPA transliteration for documents
\end_layout

\begin_layout Itemize
Develop Sinhala literary transliteration for documents
\end_layout

\begin_layout Itemize
English Locale for Sri Lanka
\end_layout

\end_deeper
\begin_layout Section
Resources/Links
\end_layout

\begin_layout Subsection
Input Methods
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[gtk-im-extra]{http://gtk-im-extra.sourceforge.net/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[GSwitchIt]{http://gswitchit.sourceforge.net/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[OpenI18N.org: IIIMF project]{http://www.openi18n.org/modules.php?op=modload&name=Sections&file=index&req=viewarticle&artid=30&page=1}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Smart Common Input Method Platform]{http://www.scim-im.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[X Keyboard Configuration Database]{http://freedesktop.org/wiki/Software/XKeyboardConfig}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[X Keyboard Extension]{http://pascal.tsu.ru/en/xkb/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[An Unreliable Guide to XKB Configuration]{http://www.charvolant.org/~doug/xkb/html/index.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[The XKB Configuration Guide]{http://xfree86.org/4.4.0/XKB-Config.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[How to further enhance XKB configuration]{http://xfree86.org/4.4.0/XKB-Enhancing.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Creating custom keyboard layouts for X11 using XKB]{http://www.linux.com/article.pl?sid=04/06/03/1558258}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[How to setup international keyboard in X Window with Xmodmap and XKB]{http://www.tldp.org/HOWTO/Intkeyb/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Some hints about xmodmap(1) and the X11 keyboard model]{http://www.in-ulm.de/~mascheck/X11/xmodmap.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Using XMODMAP to modify key and mouse actions]{http://web.mit.edu/answers/xwindows/xwindows_xmodmap.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[XKeyCaps]{http://www.jwz.org/xkeycaps/}

\end_inset


\end_layout

\begin_layout Subsection
Internationalisation
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Internationalization (I18n), Localization (L10n), Standards, and Amusements]{http://www.i18nguy.com/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[OpenI18N.org: The Free standards Group Open Internationalization Initiative]{http://www.openi18n.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[The Locale Data Markup Language Specification]{http://www.openi18n.org/specs/ldml/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Pango]{http://www.pango.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[International Components for Unicode]{http://icu.sourceforge.net/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Gtranslator]{http://gtranslator.sourceforge.net/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[www.m17n.org]{http://www.m17n.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[gucharmap]{http://gucharmap.sourceforge.net/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Yudit]{http://www.yudit.org/}

\end_inset


\end_layout

\begin_layout Subsection
Localisation
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Ankur - Supporting Bangla (Bengali) on GNU/Linux]{http://www.bengalinux.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \url[indLinuX]{http://www.indlinux.org/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Thai Language Supports]{http://linux.thai.net/~thep/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[ZzzThai]{http://www.fedu.uec.ac.jp/ZzzThai/}

\end_inset


\end_layout

\begin_layout Subsection
Sinhala
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Sinhala HOWTO, Keyboard Layouts and Transliteration Schemes]{http://www.nongnu.org/sinhala/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[http://sinhala.linux.lk]{http://sinhala.linux.lk}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[sinhala_tex]{http://www.ctan.org/tex-archive/language/sinhala/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Unicode Compatible Fonts for Sinhala and Tamil]{http://www.fonts.lk/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Sinhala Language Kit for Mac OS X]{http://www.xenotypetech.com/osxSinhala.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Microimage: Helawadana]{http://www.microimage.com/helawadana/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Sinhala fonts]{http://cg.scs.carleton.ca/~luc/sinhala.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Proposal for encoding the Sinhala script in ISO/IEC 10646]{http://www.evertype.com/standards/si/si.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Mapping of Sinhala between ISO/IEC 10646 and SLS 1134]{http://www.evertype.com/standards/si/iso10646-to-sls1134.html}

\end_inset


\end_layout

\begin_layout Subsection
Typography
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[TrueType Typography: Info about TTF Fonts and Technology]{http://www.truetype-typography.com/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Microsoft Typography]{http://www.microsoft.com/typography/default.mspx}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Introduction to OpenType]{http://www.adobe.com/type/opentype/index.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[TrueType/OpenType Tools]{http://home.kabelfoon.nl/~slam/fonts/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[FontForge]{http://fontforge.sourceforge.net/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[ Converting a legacy ASCII based Indic font to an Unicode compliant Open Type Font]{http://sayamindu.randomink.org/conv_guide/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[TTX/FontTools]{http://sourceforge.net/projects/fonttools/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Xfree86.org: fonts]{http://www.xfree86.org/current/fonts.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[FreeType2 Font Engine Documentation]{http://www.freetype.org/freetype2/documentation.html}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \url[Free UCS Outline Fonts]{http://www.nongnu.org/freefont/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[The GNU Unicode Font Project]{http://tech.groups.yahoo.com/group/gnu-unifont/}

\end_inset


\end_layout

\begin_layout Subsection
Unicode
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[Script Encoding Initiative]{http://www.linguistics.berkeley.edu/~dwanders/}

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset LatexCommand \htmlurl[unicode@unicode.org mail archive]{http://www.mail-archive.com/unicode@unicode.org/}

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
We have made significant progress in providing Sinhala support in GNU/Linux.
 There are still areas that require attention before GNU/Linux can be deployed
 more widely in Sri Lanka.
\end_layout

\end_body
\end_document
